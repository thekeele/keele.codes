events {}

http {
    # Rate limiting, 5 reqs/sec, bursts to 10
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;

    server {
        listen 80;
        server_name keele.codes www.keele.codes;

        # Rate limit all traffic
        limit_req zone=mylimit burst=10 nodelay;

        # Serve Let's Encrypt challenge files
        location /.well-known/acme-challenge/ {
            root /usr/share/nginx/html;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name keele.codes www.keele.codes;

        ssl_certificate /etc/letsencrypt/live/keele.codes/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/keele.codes/privkey.pem;

        # Rate limit all traffic
        limit_req zone=mylimit burst=10 nodelay;

        location = /resume {
            root /home/mark;
            try_files /resume/index.html =404;
        }

        location = /bitcoin {
            root /home/mark;
            try_files /bitcoin/index.html =404;
        }

        location /bitcoin {
            limit_except GET {
                deny all;
            }

            alias /home/mark/bitcoin/;
            index index.html;
        }

        # Block paths that contain .
        location ~ \. {
            return 403;
        }

        location / {
            limit_except GET {
                deny all;
            }

            proxy_pass http://app:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        
    }
}
